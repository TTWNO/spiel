//! # D-Bus interface proxy for: `org.freedesktop.Speech.Provider`
//!
//! This code was generated by `zbus-xmlgen` `4.0.1` from D-Bus introspection data.
//! Source: `org.freedesktop.Speech.Provider.xml`.
//!
//! You may prefer to adapt it, instead of using it verbatim.
//!
//! More information can be found in the [Writing a client proxy] section of the zbus
//! documentation.
//!
//!
//! [Writing a client proxy]: https://dbus2.github.io/zbus/client.html
//! [D-Bus standard interfaces]: https://dbus.freedesktop.org/doc/dbus-specification.html#standard-interfaces,
use zbus::proxy;
use alloc::{
    vec,
    string::String,
    vec::Vec,
};

#[proxy(
	interface = "org.freedesktop.Speech.Provider",
)]
trait Provider {
    /// Synthesize method
    #[allow(clippy::too_many_arguments)]
    fn synthesize(
        &self,
        pipe_fd: zbus::zvariant::Fd<'_>,
        text: &str,
        voice_id: &str,
        pitch: f64,
        rate: f64,
        is_ssml: bool,
        language: &str,
    ) -> zbus::Result<()>;

    /// Name property
    #[zbus(property)]
    fn name(&self) -> zbus::Result<String>;

    /// Voices property
    #[zbus(property)]
    fn voices(&self) -> zbus::Result<Vec<(String, String, String, u64, Vec<String>)>>;
}
